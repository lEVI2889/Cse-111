// Class to represent a single Song
class Song {
    String title;
    String artist;
    int length;
    Song next;

    // Constructor
    public Song(String title, String artist, int length) {
        this.title = title;
        this.artist = artist;
        this.length = length;
        this.next = null;
    }

    // Method to display song info
    public void songInfo() {
        System.out.println("Title: " + title);
        System.out.println("Artist: " + artist);
        System.out.println("Length: " + length + " minutes");
    }
}

// Class to represent a Playlist
class Playlist {
    String name;
    Song head;

    // Constructor
    public Playlist(String name) {
        this.name = name;
        this.head = null;
        System.out.println(name + " created.");
    }

    // Add song to the end of the playlist
    public void addSong(Song song) {
        if (head == null) {
            head = song;
        } else {
            Song current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = song;
        }
        System.out.println(song.title + " added to " + name + ".");
    }

    // Overloaded addSong method to insert at a specific position
    public void addSong(Song song, int index) {
        if (index < 0) {
            System.out.println("Cannot add song to Index " + index + ".");
            return;
        }

        if (index == 0) {
            song.next = head;
            head = song;
        } else {
            Song current = head;
            int count = 0;
            while (current != null && count < index - 1) {
                current = current.next;
                count++;
            }

            if (current == null) {
                System.out.println("Cannot add song to Index " + index + ".");
                return;
            }

            song.next = current.next;
            current.next = song;
        }
        System.out.println(song.title + " added to " + name + ".");
    }

    // Display playlist information
    public void info() {
        System.out.println(name + " has the following songs:");
        if (head == null) {
            System.out.println("No songs in " + name + ".");
        } else {
            Song current = head;
            int count = 1;
            while (current != null) {
                System.out.println("Song-" + count);
                current.songInfo();
                current = current.next;
                count++;
            }
        }
    }

    // Play a song by title
    public void playSong(String title) {
        Song current = head;
        while (current != null) {
            if (current.title.equals(title)) {
                System.out.println("Playing " + title + " by " + current.artist + ".");
                return;
            }
            current = current.next;
        }
        System.out.println(title + " not found in playlist " + name + ".");
    }

    // Play a song by index
    public void playSong(int index) {
        if (index < 0) {
            System.out.println("Song at Index " + index + " not found in " + name + ".");
            return;
        }

        Song current = head;
        int count = 0;
        while (current != null) {
            if (count == index) {
                System.out.println("Playing " + current.title + " by " + current.artist + ".");
                return;
            }
            current = current.next;
            count++;
        }

        System.out.println("Song at Index " + index + " not found in " + name + ".");
    }

    // Delete a song by title
    public void deleteSong(String title) {
        if (head == null) {
            System.out.println(title + " not found in " + name + ".");
            return;
        }

        if (head.title.equals(title)) {
            head = head.next;
            System.out.println(title + " deleted from " + name + ".");
            return;
        }

        Song current = head;
        while (current.next != null && !current.next.title.equals(title)) {
            current = current.next;
        }

        if (current.next == null) {
            System.out.println(title + " not found in " + name + ".");
        } else {
            current.next = current.next.next;
            System.out.println(title + " deleted from " + name + ".");
        }
    }

    // Count total songs in the playlist
    public int totalSong() {
        int count = 0;
        Song current = head;
        while (current != null) {
            count++;
            current = current.next;
        }
        return count;
    }

    // Merge another playlist into this playlist
    public void merge(Playlist other) {
        if (other.head == null) {
            System.out.println("Nothing to merge.");
            return;
        }

        if (head == null) {
            head = other.head;
        } else {
            Song current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = other.head;
        }
        System.out.println("Merge Completed!");
    }
}

// Tester class
public class SpotifyTester {
    public static void main(String[] args) {
        Song s1 = new Song("Song-A", "Artist-A", 3);
        System.out.println("1===========");
        s1.songInfo();

        System.out.println("2===========");
        Playlist p1 = new Playlist("First Playlist");

        System.out.println("3===========");
        p1.info();

        System.out.println("4===========");
        p1.addSong(s1);

        System.out.println("5===========");
        p1.info();

        System.out.println("6===========");
        Song s2 = new Song("Song-B", "Artist-B", 4);
        Song s3 = new Song("Song-C", "Artist-C", 2);
        p1.addSong(s2);
        p1.addSong(s3);

        System.out.println("7===========");
        p1.info();

        System.out.println("8===========");
        Song s4 = new Song("Song-D", "Artist-D", 3);
        Song s5 = new Song("Song-E", "Artist-E", 4);
        Song s6 = new Song("Song-F", "Artist-F", 2);
        Song s7 = new Song("Song-G", "Artist-G", 2);
        p1.addSong(s4, 0);
        p1.addSong(s5, 2);
        p1.addSong(s6, 5);
        p1.addSong(s7, 10);

        System.out.println("9===========");
        p1.info();

        System.out.println("10==========");
        p1.playSong("Song-F");
        p1.playSong("Song-G");
        p1.playSong("Song-B");

        System.out.println("11==========");
        p1.playSong(0);
        p1.playSong(4);
        p1.playSong(8);

        System.out.println("12==========");
        p1.deleteSong("Song-D");
        p1.deleteSong("Song-B");
        p1.deleteSong("Song-F");
        p1.deleteSong("Song-K");

        System.out.println("13==========");
        p1.info();

        System.out.println("14==========");
        System.out.println(p1.name + " has " + p1.totalSong() + " songs");

        System.out.println("15==========");
        Song ns1 = new Song("Song-Z", "Artist-Z", 3);
        Song ns2 = new Song("Song-Y", "Artist-Y", 4);
        Song ns3 = new Song("Song-X", "Artist-X", 2);
        Playlist p2 = new Playlist("Second Playlist");
        p2.addSong(ns1);
        p2.addSong(ns2);
        p2.addSong(ns3);

        System.out.println("17==========");
        p1.info();

        System.out.println("18==========");
        p2.info();

        System.out.println("19==========");
        p1.merge(p2);

        System.out.println("20==========");
        p1.info();

        System.out.println("21==========");
    }
}
